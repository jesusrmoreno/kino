{"id":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","dependencies":[{"name":"/Users/expero/Projects/omoikane/package.json","includedInParent":true,"mtime":1575065722186},{"name":"/Users/expero/Projects/omoikane/.babelrc","includedInParent":true,"mtime":1571689829727},{"name":"/Users/expero/Projects/omoikane/node_modules/react-immutable-proptypes/package.json","includedInParent":true,"mtime":1545331861781},{"name":"immutable","loc":{"line":9,"column":24},"parent":"/Users/expero/Projects/omoikane/node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","resolved":"/Users/expero/Projects/omoikane/node_modules/immutable/dist/immutable.es.js"}],"generated":{"js":"/**\n * This is a straight rip-off of the React.js ReactPropTypes.js proptype validators,\n * modified to make it possible to validate Immutable.js data.\n *     ImmutableTypes.listOf is patterned after React.PropTypes.arrayOf, but for Immutable.List\n *     ImmutableTypes.shape  is based on React.PropTypes.shape, but for any Immutable.Iterable\n */\n\"use strict\";\n\nvar Immutable = require(\"immutable\");\n\nvar ANONYMOUS = \"<<anonymous>>\";\n\nvar ImmutablePropTypes = {\n  listOf: createListOfTypeChecker,\n  mapOf: createMapOfTypeChecker,\n  orderedMapOf: createOrderedMapOfTypeChecker,\n  setOf: createSetOfTypeChecker,\n  orderedSetOf: createOrderedSetOfTypeChecker,\n  stackOf: createStackOfTypeChecker,\n  iterableOf: createIterableOfTypeChecker,\n  recordOf: createRecordOfTypeChecker,\n  shape: createShapeChecker,\n  contains: createShapeChecker,\n  mapContains: createMapContainsChecker,\n  // Primitive Types\n  list: createImmutableTypeChecker(\"List\", Immutable.List.isList),\n  map: createImmutableTypeChecker(\"Map\", Immutable.Map.isMap),\n  orderedMap: createImmutableTypeChecker(\"OrderedMap\", Immutable.OrderedMap.isOrderedMap),\n  set: createImmutableTypeChecker(\"Set\", Immutable.Set.isSet),\n  orderedSet: createImmutableTypeChecker(\"OrderedSet\", Immutable.OrderedSet.isOrderedSet),\n  stack: createImmutableTypeChecker(\"Stack\", Immutable.Stack.isStack),\n  seq: createImmutableTypeChecker(\"Seq\", Immutable.Seq.isSeq),\n  record: createImmutableTypeChecker(\"Record\", function (isRecord) {\n    return isRecord instanceof Immutable.Record;\n  }),\n  iterable: createImmutableTypeChecker(\"Iterable\", Immutable.Iterable.isIterable)\n};\n\nfunction getPropType(propValue) {\n  var propType = typeof propValue;\n  if (Array.isArray(propValue)) {\n    return \"array\";\n  }\n  if (propValue instanceof RegExp) {\n    // Old webkits (at least until Android 4.0) return 'function' rather than\n    // 'object' for typeof a RegExp. We'll normalize this here so that /bla/\n    // passes PropTypes.object.\n    return \"object\";\n  }\n  if (propValue instanceof Immutable.Iterable) {\n    return \"Immutable.\" + propValue.toSource().split(\" \")[0];\n  }\n  return propType;\n}\n\nfunction createChainableTypeChecker(validate) {\n  function checkType(isRequired, props, propName, componentName, location, propFullName) {\n    for (var _len = arguments.length, rest = Array(_len > 6 ? _len - 6 : 0), _key = 6; _key < _len; _key++) {\n      rest[_key - 6] = arguments[_key];\n    }\n\n    propFullName = propFullName || propName;\n    componentName = componentName || ANONYMOUS;\n    if (props[propName] == null) {\n      var locationName = location;\n      if (isRequired) {\n        return new Error(\"Required \" + locationName + \" `\" + propFullName + \"` was not specified in \" + (\"`\" + componentName + \"`.\"));\n      }\n    } else {\n      return validate.apply(undefined, [props, propName, componentName, location, propFullName].concat(rest));\n    }\n  }\n\n  var chainedCheckType = checkType.bind(null, false);\n  chainedCheckType.isRequired = checkType.bind(null, true);\n\n  return chainedCheckType;\n}\n\nfunction createImmutableTypeChecker(immutableClassName, immutableClassTypeValidator) {\n  function validate(props, propName, componentName, location, propFullName) {\n    var propValue = props[propName];\n    if (!immutableClassTypeValidator(propValue)) {\n      var propType = getPropType(propValue);\n      return new Error(\"Invalid \" + location + \" `\" + propFullName + \"` of type `\" + propType + \"` \" + (\"supplied to `\" + componentName + \"`, expected `\" + immutableClassName + \"`.\"));\n    }\n    return null;\n  }\n  return createChainableTypeChecker(validate);\n}\n\nfunction createIterableTypeChecker(typeChecker, immutableClassName, immutableClassTypeValidator) {\n\n  function validate(props, propName, componentName, location, propFullName) {\n    for (var _len = arguments.length, rest = Array(_len > 5 ? _len - 5 : 0), _key = 5; _key < _len; _key++) {\n      rest[_key - 5] = arguments[_key];\n    }\n\n    var propValue = props[propName];\n    if (!immutableClassTypeValidator(propValue)) {\n      var locationName = location;\n      var propType = getPropType(propValue);\n      return new Error(\"Invalid \" + locationName + \" `\" + propFullName + \"` of type \" + (\"`\" + propType + \"` supplied to `\" + componentName + \"`, expected an Immutable.js \" + immutableClassName + \".\"));\n    }\n\n    if (typeof typeChecker !== \"function\") {\n      return new Error(\"Invalid typeChecker supplied to `\" + componentName + \"` \" + (\"for propType `\" + propFullName + \"`, expected a function.\"));\n    }\n\n    var propValues = propValue.toArray();\n    for (var i = 0, len = propValues.length; i < len; i++) {\n      var error = typeChecker.apply(undefined, [propValues, i, componentName, location, \"\" + propFullName + \"[\" + i + \"]\"].concat(rest));\n      if (error instanceof Error) {\n        return error;\n      }\n    }\n  }\n  return createChainableTypeChecker(validate);\n}\n\nfunction createKeysTypeChecker(typeChecker) {\n\n  function validate(props, propName, componentName, location, propFullName) {\n    for (var _len = arguments.length, rest = Array(_len > 5 ? _len - 5 : 0), _key = 5; _key < _len; _key++) {\n      rest[_key - 5] = arguments[_key];\n    }\n\n    var propValue = props[propName];\n    if (typeof typeChecker !== \"function\") {\n      return new Error(\"Invalid keysTypeChecker (optional second argument) supplied to `\" + componentName + \"` \" + (\"for propType `\" + propFullName + \"`, expected a function.\"));\n    }\n\n    var keys = propValue.keySeq().toArray();\n    for (var i = 0, len = keys.length; i < len; i++) {\n      var error = typeChecker.apply(undefined, [keys, i, componentName, location, \"\" + propFullName + \" -> key(\" + keys[i] + \")\"].concat(rest));\n      if (error instanceof Error) {\n        return error;\n      }\n    }\n  }\n  return createChainableTypeChecker(validate);\n}\n\nfunction createListOfTypeChecker(typeChecker) {\n  return createIterableTypeChecker(typeChecker, \"List\", Immutable.List.isList);\n}\n\nfunction createMapOfTypeCheckerFactory(valuesTypeChecker, keysTypeChecker, immutableClassName, immutableClassTypeValidator) {\n  function validate() {\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return createIterableTypeChecker(valuesTypeChecker, immutableClassName, immutableClassTypeValidator).apply(undefined, args) || keysTypeChecker && createKeysTypeChecker(keysTypeChecker).apply(undefined, args);\n  }\n\n  return createChainableTypeChecker(validate);\n}\n\nfunction createMapOfTypeChecker(valuesTypeChecker, keysTypeChecker) {\n  return createMapOfTypeCheckerFactory(valuesTypeChecker, keysTypeChecker, \"Map\", Immutable.Map.isMap);\n}\n\nfunction createOrderedMapOfTypeChecker(valuesTypeChecker, keysTypeChecker) {\n  return createMapOfTypeCheckerFactory(valuesTypeChecker, keysTypeChecker, \"OrderedMap\", Immutable.OrderedMap.isOrderedMap);\n}\n\nfunction createSetOfTypeChecker(typeChecker) {\n  return createIterableTypeChecker(typeChecker, \"Set\", Immutable.Set.isSet);\n}\n\nfunction createOrderedSetOfTypeChecker(typeChecker) {\n  return createIterableTypeChecker(typeChecker, \"OrderedSet\", Immutable.OrderedSet.isOrderedSet);\n}\n\nfunction createStackOfTypeChecker(typeChecker) {\n  return createIterableTypeChecker(typeChecker, \"Stack\", Immutable.Stack.isStack);\n}\n\nfunction createIterableOfTypeChecker(typeChecker) {\n  return createIterableTypeChecker(typeChecker, \"Iterable\", Immutable.Iterable.isIterable);\n}\n\nfunction createRecordOfTypeChecker(recordKeys) {\n  function validate(props, propName, componentName, location, propFullName) {\n    for (var _len = arguments.length, rest = Array(_len > 5 ? _len - 5 : 0), _key = 5; _key < _len; _key++) {\n      rest[_key - 5] = arguments[_key];\n    }\n\n    var propValue = props[propName];\n    if (!(propValue instanceof Immutable.Record)) {\n      var propType = getPropType(propValue);\n      var locationName = location;\n      return new Error(\"Invalid \" + locationName + \" `\" + propFullName + \"` of type `\" + propType + \"` \" + (\"supplied to `\" + componentName + \"`, expected an Immutable.js Record.\"));\n    }\n    for (var key in recordKeys) {\n      var checker = recordKeys[key];\n      if (!checker) {\n        continue;\n      }\n      var mutablePropValue = propValue.toObject();\n      var error = checker.apply(undefined, [mutablePropValue, key, componentName, location, \"\" + propFullName + \".\" + key].concat(rest));\n      if (error) {\n        return error;\n      }\n    }\n  }\n  return createChainableTypeChecker(validate);\n}\n\n// there is some irony in the fact that shapeTypes is a standard hash and not an immutable collection\nfunction createShapeTypeChecker(shapeTypes) {\n  var immutableClassName = arguments[1] === undefined ? \"Iterable\" : arguments[1];\n  var immutableClassTypeValidator = arguments[2] === undefined ? Immutable.Iterable.isIterable : arguments[2];\n\n  function validate(props, propName, componentName, location, propFullName) {\n    for (var _len = arguments.length, rest = Array(_len > 5 ? _len - 5 : 0), _key = 5; _key < _len; _key++) {\n      rest[_key - 5] = arguments[_key];\n    }\n\n    var propValue = props[propName];\n    if (!immutableClassTypeValidator(propValue)) {\n      var propType = getPropType(propValue);\n      var locationName = location;\n      return new Error(\"Invalid \" + locationName + \" `\" + propFullName + \"` of type `\" + propType + \"` \" + (\"supplied to `\" + componentName + \"`, expected an Immutable.js \" + immutableClassName + \".\"));\n    }\n    var mutablePropValue = propValue.toObject();\n    for (var key in shapeTypes) {\n      var checker = shapeTypes[key];\n      if (!checker) {\n        continue;\n      }\n      var error = checker.apply(undefined, [mutablePropValue, key, componentName, location, \"\" + propFullName + \".\" + key].concat(rest));\n      if (error) {\n        return error;\n      }\n    }\n  }\n  return createChainableTypeChecker(validate);\n}\n\nfunction createShapeChecker(shapeTypes) {\n  return createShapeTypeChecker(shapeTypes);\n}\n\nfunction createMapContainsChecker(shapeTypes) {\n  return createShapeTypeChecker(shapeTypes, \"Map\", Immutable.Map.isMap);\n}\n\nmodule.exports = ImmutablePropTypes;"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}}],"sources":{"node_modules/react-immutable-proptypes/dist/ImmutablePropTypes.js":"/**\n * This is a straight rip-off of the React.js ReactPropTypes.js proptype validators,\n * modified to make it possible to validate Immutable.js data.\n *     ImmutableTypes.listOf is patterned after React.PropTypes.arrayOf, but for Immutable.List\n *     ImmutableTypes.shape  is based on React.PropTypes.shape, but for any Immutable.Iterable\n */\n\"use strict\";\n\nvar Immutable = require(\"immutable\");\n\nvar ANONYMOUS = \"<<anonymous>>\";\n\nvar ImmutablePropTypes = {\n  listOf: createListOfTypeChecker,\n  mapOf: createMapOfTypeChecker,\n  orderedMapOf: createOrderedMapOfTypeChecker,\n  setOf: createSetOfTypeChecker,\n  orderedSetOf: createOrderedSetOfTypeChecker,\n  stackOf: createStackOfTypeChecker,\n  iterableOf: createIterableOfTypeChecker,\n  recordOf: createRecordOfTypeChecker,\n  shape: createShapeChecker,\n  contains: createShapeChecker,\n  mapContains: createMapContainsChecker,\n  // Primitive Types\n  list: createImmutableTypeChecker(\"List\", Immutable.List.isList),\n  map: createImmutableTypeChecker(\"Map\", Immutable.Map.isMap),\n  orderedMap: createImmutableTypeChecker(\"OrderedMap\", Immutable.OrderedMap.isOrderedMap),\n  set: createImmutableTypeChecker(\"Set\", Immutable.Set.isSet),\n  orderedSet: createImmutableTypeChecker(\"OrderedSet\", Immutable.OrderedSet.isOrderedSet),\n  stack: createImmutableTypeChecker(\"Stack\", Immutable.Stack.isStack),\n  seq: createImmutableTypeChecker(\"Seq\", Immutable.Seq.isSeq),\n  record: createImmutableTypeChecker(\"Record\", function (isRecord) {\n    return isRecord instanceof Immutable.Record;\n  }),\n  iterable: createImmutableTypeChecker(\"Iterable\", Immutable.Iterable.isIterable)\n};\n\nfunction getPropType(propValue) {\n  var propType = typeof propValue;\n  if (Array.isArray(propValue)) {\n    return \"array\";\n  }\n  if (propValue instanceof RegExp) {\n    // Old webkits (at least until Android 4.0) return 'function' rather than\n    // 'object' for typeof a RegExp. We'll normalize this here so that /bla/\n    // passes PropTypes.object.\n    return \"object\";\n  }\n  if (propValue instanceof Immutable.Iterable) {\n    return \"Immutable.\" + propValue.toSource().split(\" \")[0];\n  }\n  return propType;\n}\n\nfunction createChainableTypeChecker(validate) {\n  function checkType(isRequired, props, propName, componentName, location, propFullName) {\n    for (var _len = arguments.length, rest = Array(_len > 6 ? _len - 6 : 0), _key = 6; _key < _len; _key++) {\n      rest[_key - 6] = arguments[_key];\n    }\n\n    propFullName = propFullName || propName;\n    componentName = componentName || ANONYMOUS;\n    if (props[propName] == null) {\n      var locationName = location;\n      if (isRequired) {\n        return new Error(\"Required \" + locationName + \" `\" + propFullName + \"` was not specified in \" + (\"`\" + componentName + \"`.\"));\n      }\n    } else {\n      return validate.apply(undefined, [props, propName, componentName, location, propFullName].concat(rest));\n    }\n  }\n\n  var chainedCheckType = checkType.bind(null, false);\n  chainedCheckType.isRequired = checkType.bind(null, true);\n\n  return chainedCheckType;\n}\n\nfunction createImmutableTypeChecker(immutableClassName, immutableClassTypeValidator) {\n  function validate(props, propName, componentName, location, propFullName) {\n    var propValue = props[propName];\n    if (!immutableClassTypeValidator(propValue)) {\n      var propType = getPropType(propValue);\n      return new Error(\"Invalid \" + location + \" `\" + propFullName + \"` of type `\" + propType + \"` \" + (\"supplied to `\" + componentName + \"`, expected `\" + immutableClassName + \"`.\"));\n    }\n    return null;\n  }\n  return createChainableTypeChecker(validate);\n}\n\nfunction createIterableTypeChecker(typeChecker, immutableClassName, immutableClassTypeValidator) {\n\n  function validate(props, propName, componentName, location, propFullName) {\n    for (var _len = arguments.length, rest = Array(_len > 5 ? _len - 5 : 0), _key = 5; _key < _len; _key++) {\n      rest[_key - 5] = arguments[_key];\n    }\n\n    var propValue = props[propName];\n    if (!immutableClassTypeValidator(propValue)) {\n      var locationName = location;\n      var propType = getPropType(propValue);\n      return new Error(\"Invalid \" + locationName + \" `\" + propFullName + \"` of type \" + (\"`\" + propType + \"` supplied to `\" + componentName + \"`, expected an Immutable.js \" + immutableClassName + \".\"));\n    }\n\n    if (typeof typeChecker !== \"function\") {\n      return new Error(\"Invalid typeChecker supplied to `\" + componentName + \"` \" + (\"for propType `\" + propFullName + \"`, expected a function.\"));\n    }\n\n    var propValues = propValue.toArray();\n    for (var i = 0, len = propValues.length; i < len; i++) {\n      var error = typeChecker.apply(undefined, [propValues, i, componentName, location, \"\" + propFullName + \"[\" + i + \"]\"].concat(rest));\n      if (error instanceof Error) {\n        return error;\n      }\n    }\n  }\n  return createChainableTypeChecker(validate);\n}\n\nfunction createKeysTypeChecker(typeChecker) {\n\n  function validate(props, propName, componentName, location, propFullName) {\n    for (var _len = arguments.length, rest = Array(_len > 5 ? _len - 5 : 0), _key = 5; _key < _len; _key++) {\n      rest[_key - 5] = arguments[_key];\n    }\n\n    var propValue = props[propName];\n    if (typeof typeChecker !== \"function\") {\n      return new Error(\"Invalid keysTypeChecker (optional second argument) supplied to `\" + componentName + \"` \" + (\"for propType `\" + propFullName + \"`, expected a function.\"));\n    }\n\n    var keys = propValue.keySeq().toArray();\n    for (var i = 0, len = keys.length; i < len; i++) {\n      var error = typeChecker.apply(undefined, [keys, i, componentName, location, \"\" + propFullName + \" -> key(\" + keys[i] + \")\"].concat(rest));\n      if (error instanceof Error) {\n        return error;\n      }\n    }\n  }\n  return createChainableTypeChecker(validate);\n}\n\nfunction createListOfTypeChecker(typeChecker) {\n  return createIterableTypeChecker(typeChecker, \"List\", Immutable.List.isList);\n}\n\nfunction createMapOfTypeCheckerFactory(valuesTypeChecker, keysTypeChecker, immutableClassName, immutableClassTypeValidator) {\n  function validate() {\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return createIterableTypeChecker(valuesTypeChecker, immutableClassName, immutableClassTypeValidator).apply(undefined, args) || keysTypeChecker && createKeysTypeChecker(keysTypeChecker).apply(undefined, args);\n  }\n\n  return createChainableTypeChecker(validate);\n}\n\nfunction createMapOfTypeChecker(valuesTypeChecker, keysTypeChecker) {\n  return createMapOfTypeCheckerFactory(valuesTypeChecker, keysTypeChecker, \"Map\", Immutable.Map.isMap);\n}\n\nfunction createOrderedMapOfTypeChecker(valuesTypeChecker, keysTypeChecker) {\n  return createMapOfTypeCheckerFactory(valuesTypeChecker, keysTypeChecker, \"OrderedMap\", Immutable.OrderedMap.isOrderedMap);\n}\n\nfunction createSetOfTypeChecker(typeChecker) {\n  return createIterableTypeChecker(typeChecker, \"Set\", Immutable.Set.isSet);\n}\n\nfunction createOrderedSetOfTypeChecker(typeChecker) {\n  return createIterableTypeChecker(typeChecker, \"OrderedSet\", Immutable.OrderedSet.isOrderedSet);\n}\n\nfunction createStackOfTypeChecker(typeChecker) {\n  return createIterableTypeChecker(typeChecker, \"Stack\", Immutable.Stack.isStack);\n}\n\nfunction createIterableOfTypeChecker(typeChecker) {\n  return createIterableTypeChecker(typeChecker, \"Iterable\", Immutable.Iterable.isIterable);\n}\n\nfunction createRecordOfTypeChecker(recordKeys) {\n  function validate(props, propName, componentName, location, propFullName) {\n    for (var _len = arguments.length, rest = Array(_len > 5 ? _len - 5 : 0), _key = 5; _key < _len; _key++) {\n      rest[_key - 5] = arguments[_key];\n    }\n\n    var propValue = props[propName];\n    if (!(propValue instanceof Immutable.Record)) {\n      var propType = getPropType(propValue);\n      var locationName = location;\n      return new Error(\"Invalid \" + locationName + \" `\" + propFullName + \"` of type `\" + propType + \"` \" + (\"supplied to `\" + componentName + \"`, expected an Immutable.js Record.\"));\n    }\n    for (var key in recordKeys) {\n      var checker = recordKeys[key];\n      if (!checker) {\n        continue;\n      }\n      var mutablePropValue = propValue.toObject();\n      var error = checker.apply(undefined, [mutablePropValue, key, componentName, location, \"\" + propFullName + \".\" + key].concat(rest));\n      if (error) {\n        return error;\n      }\n    }\n  }\n  return createChainableTypeChecker(validate);\n}\n\n// there is some irony in the fact that shapeTypes is a standard hash and not an immutable collection\nfunction createShapeTypeChecker(shapeTypes) {\n  var immutableClassName = arguments[1] === undefined ? \"Iterable\" : arguments[1];\n  var immutableClassTypeValidator = arguments[2] === undefined ? Immutable.Iterable.isIterable : arguments[2];\n\n  function validate(props, propName, componentName, location, propFullName) {\n    for (var _len = arguments.length, rest = Array(_len > 5 ? _len - 5 : 0), _key = 5; _key < _len; _key++) {\n      rest[_key - 5] = arguments[_key];\n    }\n\n    var propValue = props[propName];\n    if (!immutableClassTypeValidator(propValue)) {\n      var propType = getPropType(propValue);\n      var locationName = location;\n      return new Error(\"Invalid \" + locationName + \" `\" + propFullName + \"` of type `\" + propType + \"` \" + (\"supplied to `\" + componentName + \"`, expected an Immutable.js \" + immutableClassName + \".\"));\n    }\n    var mutablePropValue = propValue.toObject();\n    for (var key in shapeTypes) {\n      var checker = shapeTypes[key];\n      if (!checker) {\n        continue;\n      }\n      var error = checker.apply(undefined, [mutablePropValue, key, componentName, location, \"\" + propFullName + \".\" + key].concat(rest));\n      if (error) {\n        return error;\n      }\n    }\n  }\n  return createChainableTypeChecker(validate);\n}\n\nfunction createShapeChecker(shapeTypes) {\n  return createShapeTypeChecker(shapeTypes);\n}\n\nfunction createMapContainsChecker(shapeTypes) {\n  return createShapeTypeChecker(shapeTypes, \"Map\", Immutable.Map.isMap);\n}\n\nmodule.exports = ImmutablePropTypes;"},"lineCount":250}},"error":null,"hash":"ae0dab3de28e451bb7775eae494d7463","cacheData":{"env":{}}}