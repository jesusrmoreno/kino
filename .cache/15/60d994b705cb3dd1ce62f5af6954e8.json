{"id":"node_modules/esrever/esrever.js","dependencies":[{"name":"/Users/expero/Projects/omoikane/package.json","includedInParent":true,"mtime":1575503754619},{"name":"/Users/expero/Projects/omoikane/.babelrc","includedInParent":true,"mtime":1571689829727},{"name":"/Users/expero/Projects/omoikane/node_modules/esrever/package.json","includedInParent":true,"mtime":1545331861709}],"generated":{"js":"var global = arguments[3];\nvar define;\n/*! https://mths.be/esrever v0.2.0 by @mathias */\n;(function(root) {\n\n\t// Detect free variables `exports`\n\tvar freeExports = typeof exports == 'object' && exports;\n\n\t// Detect free variable `module`\n\tvar freeModule = typeof module == 'object' && module &&\n\t\tmodule.exports == freeExports && module;\n\n\t// Detect free variable `global`, from Node.js or Browserified code,\n\t// and use it as `root`\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal) {\n\t\troot = freeGlobal;\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\tvar regexSymbolWithCombiningMarks = /([\\0-\\u02FF\\u0370-\\u1AAF\\u1B00-\\u1DBF\\u1E00-\\u20CF\\u2100-\\uD7FF\\uE000-\\uFE1F\\uFE30-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])([\\u0300-\\u036F\\u1AB0-\\u1AFF\\u1DC0-\\u1DFF\\u20D0-\\u20FF\\uFE20-\\uFE2F]+)/g;\n\tvar regexSurrogatePair = /([\\uD800-\\uDBFF])([\\uDC00-\\uDFFF])/g;\n\n\tvar reverse = function(string) {\n\t\t// Step 1: deal with combining marks and astral symbols (surrogate pairs)\n\t\tstring = string\n\t\t\t// Swap symbols with their combining marks so the combining marks go first\n\t\t\t.replace(regexSymbolWithCombiningMarks, function($0, $1, $2) {\n\t\t\t\t// Reverse the combining marks so they will end up in the same order\n\t\t\t\t// later on (after another round of reversing)\n\t\t\t\treturn reverse($2) + $1;\n\t\t\t})\n\t\t\t// Swap high and low surrogates so the low surrogates go first\n\t\t\t.replace(regexSurrogatePair, '$2$1');\n\t\t// Step 2: reverse the code units in the string\n\t\tvar result = '';\n\t\tvar index = string.length;\n\t\twhile (index--) {\n\t\t\tresult += string.charAt(index);\n\t\t}\n\t\treturn result;\n\t};\n\n\t/*--------------------------------------------------------------------------*/\n\n\tvar esrever = {\n\t\t'version': '0.2.0',\n\t\t'reverse': reverse\n\t};\n\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttypeof define == 'function' &&\n\t\ttypeof define.amd == 'object' &&\n\t\tdefine.amd\n\t) {\n\t\tdefine(function() {\n\t\t\treturn esrever;\n\t\t});\n\t}\telse if (freeExports && !freeExports.nodeType) {\n\t\tif (freeModule) { // in Node.js, io.js, or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = esrever;\n\t\t} else { // in Narwhal or RingoJS v0.7.0-\n\t\t\tfor (var key in esrever) {\n\t\t\t\tesrever.hasOwnProperty(key) && (freeExports[key] = esrever[key]);\n\t\t\t}\n\t\t}\n\t} else { // in Rhino or a web browser\n\t\troot.esrever = esrever;\n\t}\n\n}(this));\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/esrever/esrever.js","original":{"line":1,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/esrever/esrever.js","original":{"line":2,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/esrever/esrever.js","original":{"line":3,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/esrever/esrever.js","original":{"line":4,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/esrever/esrever.js","original":{"line":5,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/esrever/esrever.js","original":{"line":6,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/esrever/esrever.js","original":{"line":7,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/esrever/esrever.js","original":{"line":8,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/esrever/esrever.js","original":{"line":9,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/esrever/esrever.js","original":{"line":10,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/esrever/esrever.js","original":{"line":11,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/esrever/esrever.js","original":{"line":12,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/esrever/esrever.js","original":{"line":13,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/esrever/esrever.js","original":{"line":14,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/esrever/esrever.js","original":{"line":15,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/esrever/esrever.js","original":{"line":16,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/esrever/esrever.js","original":{"line":17,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/esrever/esrever.js","original":{"line":18,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/esrever/esrever.js","original":{"line":19,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/esrever/esrever.js","original":{"line":20,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/esrever/esrever.js","original":{"line":21,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/esrever/esrever.js","original":{"line":22,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/esrever/esrever.js","original":{"line":23,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/esrever/esrever.js","original":{"line":24,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/esrever/esrever.js","original":{"line":25,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/esrever/esrever.js","original":{"line":26,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/esrever/esrever.js","original":{"line":27,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/esrever/esrever.js","original":{"line":28,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/esrever/esrever.js","original":{"line":29,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/esrever/esrever.js","original":{"line":30,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/esrever/esrever.js","original":{"line":31,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/esrever/esrever.js","original":{"line":32,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/esrever/esrever.js","original":{"line":33,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/esrever/esrever.js","original":{"line":34,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/esrever/esrever.js","original":{"line":35,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/esrever/esrever.js","original":{"line":36,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/esrever/esrever.js","original":{"line":37,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/esrever/esrever.js","original":{"line":38,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/esrever/esrever.js","original":{"line":39,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/esrever/esrever.js","original":{"line":40,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/esrever/esrever.js","original":{"line":41,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/esrever/esrever.js","original":{"line":42,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/esrever/esrever.js","original":{"line":43,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/esrever/esrever.js","original":{"line":44,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/esrever/esrever.js","original":{"line":45,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/esrever/esrever.js","original":{"line":46,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/esrever/esrever.js","original":{"line":47,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/esrever/esrever.js","original":{"line":48,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/esrever/esrever.js","original":{"line":49,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/esrever/esrever.js","original":{"line":50,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/esrever/esrever.js","original":{"line":51,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/esrever/esrever.js","original":{"line":52,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/esrever/esrever.js","original":{"line":53,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/esrever/esrever.js","original":{"line":54,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/esrever/esrever.js","original":{"line":55,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/esrever/esrever.js","original":{"line":56,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/esrever/esrever.js","original":{"line":57,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/esrever/esrever.js","original":{"line":58,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/esrever/esrever.js","original":{"line":59,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/esrever/esrever.js","original":{"line":60,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/esrever/esrever.js","original":{"line":61,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/esrever/esrever.js","original":{"line":62,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/esrever/esrever.js","original":{"line":63,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/esrever/esrever.js","original":{"line":64,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/esrever/esrever.js","original":{"line":65,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/esrever/esrever.js","original":{"line":66,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/esrever/esrever.js","original":{"line":67,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/esrever/esrever.js","original":{"line":68,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/esrever/esrever.js","original":{"line":69,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/esrever/esrever.js","original":{"line":70,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/esrever/esrever.js","original":{"line":71,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/esrever/esrever.js","original":{"line":72,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/esrever/esrever.js","original":{"line":73,"column":0},"generated":{"line":75,"column":0}}],"sources":{"node_modules/esrever/esrever.js":"/*! https://mths.be/esrever v0.2.0 by @mathias */\n;(function(root) {\n\n\t// Detect free variables `exports`\n\tvar freeExports = typeof exports == 'object' && exports;\n\n\t// Detect free variable `module`\n\tvar freeModule = typeof module == 'object' && module &&\n\t\tmodule.exports == freeExports && module;\n\n\t// Detect free variable `global`, from Node.js or Browserified code,\n\t// and use it as `root`\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal) {\n\t\troot = freeGlobal;\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\tvar regexSymbolWithCombiningMarks = /([\\0-\\u02FF\\u0370-\\u1AAF\\u1B00-\\u1DBF\\u1E00-\\u20CF\\u2100-\\uD7FF\\uE000-\\uFE1F\\uFE30-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])([\\u0300-\\u036F\\u1AB0-\\u1AFF\\u1DC0-\\u1DFF\\u20D0-\\u20FF\\uFE20-\\uFE2F]+)/g;\n\tvar regexSurrogatePair = /([\\uD800-\\uDBFF])([\\uDC00-\\uDFFF])/g;\n\n\tvar reverse = function(string) {\n\t\t// Step 1: deal with combining marks and astral symbols (surrogate pairs)\n\t\tstring = string\n\t\t\t// Swap symbols with their combining marks so the combining marks go first\n\t\t\t.replace(regexSymbolWithCombiningMarks, function($0, $1, $2) {\n\t\t\t\t// Reverse the combining marks so they will end up in the same order\n\t\t\t\t// later on (after another round of reversing)\n\t\t\t\treturn reverse($2) + $1;\n\t\t\t})\n\t\t\t// Swap high and low surrogates so the low surrogates go first\n\t\t\t.replace(regexSurrogatePair, '$2$1');\n\t\t// Step 2: reverse the code units in the string\n\t\tvar result = '';\n\t\tvar index = string.length;\n\t\twhile (index--) {\n\t\t\tresult += string.charAt(index);\n\t\t}\n\t\treturn result;\n\t};\n\n\t/*--------------------------------------------------------------------------*/\n\n\tvar esrever = {\n\t\t'version': '0.2.0',\n\t\t'reverse': reverse\n\t};\n\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttypeof define == 'function' &&\n\t\ttypeof define.amd == 'object' &&\n\t\tdefine.amd\n\t) {\n\t\tdefine(function() {\n\t\t\treturn esrever;\n\t\t});\n\t}\telse if (freeExports && !freeExports.nodeType) {\n\t\tif (freeModule) { // in Node.js, io.js, or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = esrever;\n\t\t} else { // in Narwhal or RingoJS v0.7.0-\n\t\t\tfor (var key in esrever) {\n\t\t\t\tesrever.hasOwnProperty(key) && (freeExports[key] = esrever[key]);\n\t\t\t}\n\t\t}\n\t} else { // in Rhino or a web browser\n\t\troot.esrever = esrever;\n\t}\n\n}(this));\n"},"lineCount":75}},"error":null,"hash":"dfaca2382d285363ee78bd62f6f29906","cacheData":{"env":{}}}